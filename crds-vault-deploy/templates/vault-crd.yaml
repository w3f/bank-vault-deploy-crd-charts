apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
  namespace: {{ .Values.namespace }}
spec:
  size: 1
  image: vault:{{ .Values.vault_version }}
  # specify a custom bank-vaults image with bankVaultsImage:
  # bankVaultsImage: ghcr.io/banzaicloud/bank-vaults:latest

  resources:
    vault:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "2Gi"
        cpu: "2"

  # Common annotations for all created resources
  annotations:
    common/annotation: "true"

  # Vault Pods , Services and TLS Secret annotations
  vaultAnnotations:
    type/instance: "vault"

  # Vault Configurer Pods and Services annotations
  vaultConfigurerAnnotations:
    type/instance: "vaultconfigurer"

  # Vault Pods , Services and TLS Secret labels
  vaultLabels:
    example.com/log-format: "json"

  # Vault Configurer Pods and Services labels
  vaultConfigurerLabels:
    example.com/log-format: "string"

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Specify the Service's type where the Vault Service is exposed
  # Please note that some Ingress controllers like https://github.com/kubernetes/ingress-gce
  # forces you to expose your Service on a NodePort
  serviceType: ClusterIP

  vaultInitContainers:
    - name: op-connect
      image: alpine:latest
      command: ['sh', '-c']
      args:
        - cd /tmp &&
          wget -O op-connect.zip https://github.com/1Password/vault-plugin-secrets-onepassword/releases/download/v1.0.0/vault-plugin-secrets-onepassword_1.0.0_linux_amd64.zip &&
          unzip op-connect.zip &&
          mv vault-plugin-secrets-onepassword_v1.0.0 /usr/local/libexec/vault/op-connect &&
          chmod +x /usr/local/libexec/vault/op-connect
      volumeMounts:
        - name: plugins
          mountPath: /usr/local/libexec/vault

  # Use local disk to store Vault file data, see config section.
  volumes:
    - name: vault-file
      persistentVolumeClaim:
        claimName: vault-file
    - name: plugins
      emptyDir: {}

  volumeMounts:
    - name: vault-file
      mountPath: /vault/file
    - name: plugins
      mountPath: /usr/local/libexec/vault
      readOnly: true

  # Support for distributing the generated CA certificate Secret to other namespaces.
  # Define a list of namespaces or use ["*"] for all namespaces.
  caNamespaces:
    - "*"

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      # The preFlightChecks flag enables unseal and root token storage tests
      # This is true by default
      preFlightChecks: true
      # The storeRootToken flag enables storing of root token in chosen storage
      # This is true by default
      storeRootToken: true
    kubernetes:
      secretNamespace: vault

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: "/vault/file"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        cluster_address: "0.0.0.0:8201"
        tls_disable: true
    telemetry:
      statsd_address: localhost:9125
    ui: true
    api_addr: "http://vault.vault:8200"
    disable_mlock: true
    plugin_directory: "/usr/local/libexec/vault"

  externalConfig:
    plugins:
      - plugin_name: op-connect
        command: op-connect
        sha256: 7ce3e44c1a5f17e5f9b8dafd7a4c604b86ea862a69e5d2f12684cb0f136f5ba2
        type: secret
    secrets:
      - path: op
        type: plugin
        plugin_name: op-connect
      - path: op
        type: kv # We need to fool the code in accepting no config path
        configuration:
          config:
          - op_connect_host: "http://{{ .Values.op_connector_service }}.svc.cluster.local:8080"
          - op_connect_token: {{ .Values.op_connect_token }}

  istioEnabled: false

  vaultEnvsConfig:
    - name: VAULT_ADDR
      value: 'http://127.0.0.1:8200'
    - name: VAULT_LOG_LEVEL
      value: debug

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-file
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi